2009-12-08  Marcus Brinkmann  <marcus@g10code.de>

	* configure.ac (NEED_LIBASSUAN_API, NEED_LIBASSUAN_VERSION): Bump to
	version 2.
	* engine-assuan.c (connect_uiserver, op_assuan_init, op_assuan_encrypt,
	op_assuan_encrypt_bottom, op_assuan_sign, op_assuan_decrypt, op_assuan_verify,
	op_assuan_start_keymanager, op_assuan_start_confdialog: Update to new API.

diff -rup /home/marcus/g10/svn/gpgol/configure.ac gpgol-1.1.0-svn323/configure.ac
--- /home/marcus/g10/svn/gpgol/configure.ac	2009-11-03 15:42:30.000000000 +0100
+++ gpgol-1.1.0-svn323/configure.ac	2009-12-08 21:53:14.000000000 +0100
@@ -28,8 +28,8 @@ AC_INIT([gpgol], 
 NEED_GPG_ERROR_VERSION=1.4
 NEED_GPGME_API=1
 NEED_GPGME_VERSION=1.1.0
-NEED_LIBASSUAN_API=1
-NEED_LIBASSUAN_VERSION=1.0.4
+NEED_LIBASSUAN_API=2
+NEED_LIBASSUAN_VERSION=1.1.0
 
 
 SVN_REVISION=svn_revision
diff -rup /home/marcus/g10/svn/gpgol/src/engine-assuan.c gpgol-1.1.0-svn323/src/engine-assuan.c
--- /home/marcus/g10/svn/gpgol/src/engine-assuan.c	2009-08-31 20:56:02.000000000 +0200
+++ gpgol-1.1.0-svn323/src/engine-assuan.c	2009-12-08 22:01:45.000000000 +0100
@@ -464,7 +464,14 @@ connect_uiserver (assuan_context_t *r_ct
   *r_pid = (pid_t)(-1);
   *r_cmdid = 0;
  retry:
-  err = assuan_socket_connect (&ctx, get_socket_name (), -1);
+  err = assuan_new (&ctx);
+  if (err)
+    {
+      log_error ("%s:%s: can not allocate assuan context",
+		 SRCNAME, __func__);
+      return err;
+    }
+  err = assuan_socket_connect (ctx, get_socket_name (), ASSUAN_INVALID_PID, 0);
   if (err)
     {
       /* Let only one thread start an UI server but all allow threads
@@ -519,7 +526,7 @@ connect_uiserver (assuan_context_t *r_ct
     }
   else if ((err = send_options (ctx, hwnd, r_pid)))
     {
-      assuan_disconnect (ctx);
+      assuan_release (ctx);
     }
   else
     {
@@ -583,7 +590,7 @@ op_assuan_init (void)
   if (!err)
     {
       err = assuan_transact (ctx, "NOP", NULL, NULL, NULL, NULL, NULL, NULL);
-      assuan_disconnect (ctx);
+      assuan_release (ctx);
     }
   if (err)
     return err;
@@ -1729,7 +1736,7 @@ op_assuan_encrypt (protocol_t protocol, 
       close_pipe (inpipe);
       close_pipe (outpipe);
       xfree (cld);
-      assuan_disconnect (ctx);
+      assuan_release (ctx);
     }
   else
     engine_private_set_cancel (filter, ctx);
@@ -1767,7 +1774,7 @@ op_assuan_encrypt_bottom (struct engine_
       close_pipe (encstate->outpipe);
       if (cancel)
         destroy_command (encstate->cmdid, 1);
-      assuan_disconnect (encstate->ctx);
+      assuan_release (encstate->ctx);
       encstate->ctx = NULL;
     }
   else
@@ -1897,7 +1904,7 @@ op_assuan_sign (protocol_t protocol, 
       close_pipe (inpipe);
       close_pipe (outpipe);
       xfree (cld);
-      assuan_disconnect (ctx);
+      assuan_release (ctx);
     }
   else
     engine_private_set_cancel (filter, ctx);
@@ -1995,7 +2002,7 @@ op_assuan_decrypt (protocol_t protocol,
       close_pipe (inpipe);
       close_pipe (outpipe);
       xfree (cld);
-      assuan_disconnect (ctx);
+      assuan_release (ctx);
     }
   else
     engine_private_set_cancel (filter, ctx);
@@ -2152,7 +2159,7 @@ op_assuan_verify (gpgme_protocol_t proto
       close_pipe (outpipe);
       gpgme_data_release (sigdata);
       xfree (cld);
-      assuan_disconnect (ctx);
+      assuan_release (ctx);
     }
   else
     engine_private_set_cancel (filter, ctx);
@@ -2175,7 +2182,7 @@ op_assuan_start_keymanager (void *hwnd)
     {
       err = assuan_transact (ctx, "START_KEYMANAGER",
                              NULL, NULL, NULL, NULL, NULL, NULL);
-      assuan_disconnect (ctx);
+      assuan_release (ctx);
     }
   return err;
 }
@@ -2196,7 +2203,7 @@ op_assuan_start_confdialog (void *hwnd)
     {
       err = assuan_transact (ctx, "START_CONFDIALOG",
                              NULL, NULL, NULL, NULL, NULL, NULL);
-      assuan_disconnect (ctx);
+      assuan_release (ctx);
     }
   return err;
 }
